events {
   worker_connections	1024;
}

http {
   include	mime.types;
   default_type	application/octet-stream;
   keepalive_timeout	65;
   
    ##Load balancer
    upstream webservers {
        server 192.168.200.3:8080;
        server 192.168.200.4:8080;
    }

    # Redirect HTTP traffic to HTTPS
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    # Proxy HTTPS traffic using a self-signed certificate.
    server {
        listen 443 ssl default_server;
        server_name back;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://localhost:8080;
            proxy_read_timeout  90s;
        }

        ssl_certificate /docker-entrypoint-initproxy.d/icesi.cert;
        ssl_certificate_key /docker-entrypoint-initproxy.d/icesi.key;
    }
}
